{
  "address": "0x92BD1Aa95CA9265EAB2Af8AC1B536AA995D8fC37",
  "abi": [
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x19b073454531e26844b543beedd256a88e8097640d7823eea77bac2393978bee",
  "receipt": {
    "to": null,
    "from": "0x236ECcAB8cdcfEDb099dE85c4060024bA3cE4d46",
    "contractAddress": "0x92BD1Aa95CA9265EAB2Af8AC1B536AA995D8fC37",
    "transactionIndex": 113,
    "gasUsed": "103743",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0x1dba16de55618b64151425e2ee6fef64015bbe7a52a6e3bfa611c2898882d4d1",
    "transactionHash": "0x19b073454531e26844b543beedd256a88e8097640d7823eea77bac2393978bee",
    "logs": [],
    "blockNumber": 13671750,
    "cumulativeGasUsed": "7618648",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "718fe4de06792cef42280377c983f0a6",
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SigmaFallThrough.sol\":\"SigmaFallThrough\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.7.0;\\n\\n/**\\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\\n * be specified by overriding the virtual {_implementation} function.\\n *\\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\\n * different contract through the {_delegate} function.\\n *\\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\\n */\\nabstract contract Proxy {\\n    /**\\n     * @dev Delegates the current call to `implementation`.\\n     *\\n     * This function does not return to its internall call site, it will return directly to the external caller.\\n     */\\n    function _delegate(address implementation) internal virtual {\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            // Copy msg.data. We take full control of memory in this inline assembly\\n            // block because it will not return to Solidity code. We overwrite the\\n            // Solidity scratch pad at memory position 0.\\n            calldatacopy(0, 0, calldatasize())\\n\\n            // Call the implementation.\\n            // out and outsize are 0 because we don't know the size yet.\\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\\n\\n            // Copy the returned data.\\n            returndatacopy(0, 0, returndatasize())\\n\\n            switch result\\n            // delegatecall returns 0 on error.\\n            case 0 { revert(0, returndatasize()) }\\n            default { return(0, returndatasize()) }\\n        }\\n    }\\n\\n    /**\\n     * @dev This is a virtual function that should be overriden so it returns the address to which the fallback function\\n     * and {_fallback} should delegate.\\n     */\\n    function _implementation() internal view virtual returns (address);\\n\\n    /**\\n     * @dev Delegates the current call to the address returned by `_implementation()`.\\n     *\\n     * This function does not return to its internall call site, it will return directly to the external caller.\\n     */\\n    function _fallback() internal virtual {\\n        _beforeFallback();\\n        _delegate(_implementation());\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\\n     * function in the contract matches the call data.\\n     */\\n    fallback () external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\\n     * is empty.\\n     */\\n    receive () external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\\n     * call, or as part of the Solidity `fallback` or `receive` functions.\\n     *\\n     * If overriden should call `super._beforeFallback()`.\\n     */\\n    function _beforeFallback() internal virtual {\\n    }\\n}\\n\",\"keccak256\":\"0x202faa683f33bdc2fdef9c4a75626058974c69b9bee9cb981b09549ce91f0938\",\"license\":\"MIT\"},\"contracts/SigmaFallThrough.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity =0.7.6;\\n\\nimport \\\"./interfaces/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/proxy/Proxy.sol\\\";\\n\\ncontract SigmaFallThrough is Proxy {\\n  address internal constant FFF = 0xaBAfA52D3d5A2c18A4C1Ae24480D22B831fC0413;\\n\\n  function _implementation() internal view virtual override returns (address) {\\n    return 0x7B3B2B39CbdBddaDC13D8559D82c054b9C2fd5f3;\\n  }\\n\\n  function _beforeFallback() internal virtual override {\\n    if (address(this) == FFF && msg.sig != IERC20.balanceOf.selector) {\\n      revert(\\\"Contract disabled\\\");\\n    }\\n  }\\n}\",\"keccak256\":\"0x3e8a13672decd67aadba0e25d13fb0c885a6cbfe84e3d33c9dd218bc504c0bef\",\"license\":\"MIT\"},\"contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.5.0;\\n\\n\\ninterface IERC20 {\\n  event Transfer(address indexed from, address indexed to, uint256 value);\\n  event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n  function totalSupply() external view returns (uint256);\\n  function balanceOf(address account) external view returns (uint256);\\n  function transfer(address recipient, uint256 amount) external returns (bool);\\n  function allowance(address owner, address spender) external view returns (uint256);\\n  function approve(address spender, uint256 amount) external returns (bool);\\n  function increaseAllowance(address spender, uint256 addedValue) external returns (bool);\\n  function decreaseAllowance(address spender, uint256 subtractedValue) external returns (bool);\\n  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n}\",\"keccak256\":\"0x436755b75438baab8bab2cd1147a6f8cb6232bd0d04b7248f339869d5fcf4ce5\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060e98061001f6000396000f3fe608060405236601057600e6013565b005b600e5b60196027565b6025602160a1565b60b9565b565b3073abafa52d3d5a2c18a4c1ae24480d22b831fc0413148015605c57506000356001600160e01b0319166370a0823160e01b14155b156025576040805162461bcd60e51b815260206004820152601160248201527010dbdb9d1c9858dd08191a5cd8589b1959607a1b604482015290519081900360640190fd5b737b3b2b39cbdbddadc13d8559d82c054b9c2fd5f390565b3660008037600080366000845af43d6000803e80801560d7573d6000f35b3d6000fdfea164736f6c6343000706000a",
  "deployedBytecode": "0x608060405236601057600e6013565b005b600e5b60196027565b6025602160a1565b60b9565b565b3073abafa52d3d5a2c18a4c1ae24480d22b831fc0413148015605c57506000356001600160e01b0319166370a0823160e01b14155b156025576040805162461bcd60e51b815260206004820152601160248201527010dbdb9d1c9858dd08191a5cd8589b1959607a1b604482015290519081900360640190fd5b737b3b2b39cbdbddadc13d8559d82c054b9c2fd5f390565b3660008037600080366000845af43d6000803e80801560d7573d6000f35b3d6000fdfea164736f6c6343000706000a",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}